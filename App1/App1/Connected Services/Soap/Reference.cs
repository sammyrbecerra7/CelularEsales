//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;

namespace Soap
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Soap.TemporalSoap")]
    public interface TemporalSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/InsertaDatosTmp", ReplyAction="*")]
        System.Threading.Tasks.Task<Soap.InsertaDatosTmpResponse> InsertaDatosTmpAsync(Soap.InsertaDatosTmpRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertaDatosTmpRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertaDatosTmp", Namespace="http://tempuri.org/", Order=0)]
        public Soap.InsertaDatosTmpRequestBody Body;
        
        public InsertaDatosTmpRequest()
        {
        }
        
        public InsertaDatosTmpRequest(Soap.InsertaDatosTmpRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertaDatosTmpRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string formapago;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string valor;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string auxi1;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string auxi2;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=4)]
        public string auxi3;
        
        public InsertaDatosTmpRequestBody()
        {
        }
        
        public InsertaDatosTmpRequestBody(string formapago, string valor, string auxi1, string auxi2, string auxi3)
        {
            this.formapago = formapago;
            this.valor = valor;
            this.auxi1 = auxi1;
            this.auxi2 = auxi2;
            this.auxi3 = auxi3;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class InsertaDatosTmpResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="InsertaDatosTmpResponse", Namespace="http://tempuri.org/", Order=0)]
        public Soap.InsertaDatosTmpResponseBody Body;
        
        public InsertaDatosTmpResponse()
        {
        }
        
        public InsertaDatosTmpResponse(Soap.InsertaDatosTmpResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class InsertaDatosTmpResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string InsertaDatosTmpResult;
        
        public InsertaDatosTmpResponseBody()
        {
        }
        
        public InsertaDatosTmpResponseBody(string InsertaDatosTmpResult)
        {
            this.InsertaDatosTmpResult = InsertaDatosTmpResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public interface TemporalSoapChannel : Soap.TemporalSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public partial class TemporalSoapClient : System.ServiceModel.ClientBase<Soap.TemporalSoap>, Soap.TemporalSoap
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public TemporalSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(TemporalSoapClient.GetBindingForEndpoint(endpointConfiguration), TemporalSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public TemporalSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(TemporalSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public TemporalSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(TemporalSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public TemporalSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Soap.InsertaDatosTmpResponse> Soap.TemporalSoap.InsertaDatosTmpAsync(Soap.InsertaDatosTmpRequest request)
        {
            return base.Channel.InsertaDatosTmpAsync(request);
        }
        
        public System.Threading.Tasks.Task<Soap.InsertaDatosTmpResponse> InsertaDatosTmpAsync(string formapago, string valor, string auxi1, string auxi2, string auxi3)
        {
            Soap.InsertaDatosTmpRequest inValue = new Soap.InsertaDatosTmpRequest();
            inValue.Body = new Soap.InsertaDatosTmpRequestBody();
            inValue.Body.formapago = formapago;
            inValue.Body.valor = valor;
            inValue.Body.auxi1 = auxi1;
            inValue.Body.auxi2 = auxi2;
            inValue.Body.auxi3 = auxi3;
            return ((Soap.TemporalSoap)(this)).InsertaDatosTmpAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.TemporalSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.TemporalSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpTransportBindingElement httpBindingElement = new System.ServiceModel.Channels.HttpTransportBindingElement();
                httpBindingElement.AllowCookies = true;
                httpBindingElement.MaxBufferSize = int.MaxValue;
                httpBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.TemporalSoap))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost/temporal/temporal.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.TemporalSoap12))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost/temporal/temporal.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            TemporalSoap,
            
            TemporalSoap12,
        }
    }
}
